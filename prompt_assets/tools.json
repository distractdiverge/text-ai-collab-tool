{
  "argument_structure_detector": {
    "description": "Tags sentences/paragraphs as Claim, Evidence, Reasoning, Counter-argument, etc. Useful for persuasive-vs-informative diagnosis.",
    "schema": "<argument_structure_detector>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\",\"description\":\"The text to analyze for argument structure\"},\"granularity\":{\"type\":\"string\",\"enum\":[\"sentence\",\"paragraph\",\"section\"],\"description\":\"The level of granularity for analysis\"}},\"required\":[\"text\",\"granularity\"],\"additionalProperties\":false}</argument_structure_detector>"
  },
  "citation_manager": {
    "description": "Given a URL/DOI/ISBN, fetches metadata and returns properly formatted in-text citation & bibliography entry in chosen style.",
    "schema": "<citation_manager>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"referenceId\":{\"type\":\"string\",\"description\":\"The URL, DOI, or ISBN of the reference to fetch\"},\"citationStyle\":{\"type\":\"string\",\"enum\":[\"APA\",\"MLA\",\"Chicago\",\"IEEE\",\"Harvard\"],\"description\":\"Citation style to format the reference in\"}},\"required\":[\"referenceId\",\"citationStyle\"],\"additionalProperties\":false}</citation_manager>"
  },
  "create_memory": {
    "description": "Save important context relevant to the USER and their task to a memory database.\nExamples of context to save:\n- USER preferences\n- Explicit USER requests to remember something or otherwise alter your behavior\n- Important code snippets\n- Technical stacks\n- Project structure\n- Major milestones or features\n- New design patterns and architectural decisions\n- Any other information that you think is important to remember.\nBefore creating a new memory, first check to see if a semantically related memory already exists in the database. If found, update it instead of creating a duplicate.\nUse this tool to delete incorrect memories when necessary.",
    "schema": "<create_memory>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"Id of an existing MEMORY to update or delete. When creating a new MEMORY, leave this blank.\"},\"Title\":{\"type\":\"string\",\"description\":\"Descriptive title for a new or updated MEMORY. This is required when creating or updating a memory. When deleting an existing MEMORY, leave this blank.\"},\"Content\":{\"type\":\"string\",\"description\":\"Content of a new or updated MEMORY. When deleting an existing MEMORY, leave this blank.\"},\"CorpusNames\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"CorpusNames of the workspaces associated with the MEMORY. Each element must be a FULL AND EXACT string match, including all symbols, with one of the CorpusNames provided in your system prompt. Only used when creating a new MEMORY.\"},\"Tags\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Tags to associate with the MEMORY. These will be used to filter or retrieve the MEMORY. Only used when creating a new MEMORY. Use snake_case.\"},\"Action\":{\"type\":\"string\",\"enum\":[\"create\",\"update\",\"delete\"],\"description\":\"The type of action to take on the MEMORY. Must be one of 'create', 'update', or 'delete'\"},\"UserTriggered\":{\"type\":\"boolean\",\"description\":\"Set to true if the user explicitly asked you to create/modify this memory.\"}},\"required\":[\"Id\",\"Title\",\"Content\",\"CorpusNames\",\"Tags\",\"Action\",\"UserTriggered\"],\"additionalProperties\":false}</create_memory>"
  },
  "diagram_generator": {
    "description": "Turns a block of pseudo-code / text description into an inline SVG or mermaid diagram (flow-chart, sequence, mind-map).",
    "schema": "<diagram_generator>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"description\":{\"type\":\"string\",\"description\":\"Description of the diagram to generate\"},\"diagramType\":{\"type\":\"string\",\"enum\":[\"flowchart\",\"sequence\",\"class\",\"er\",\"gantt\",\"pie\",\"state\",\"journey\",\"git\",\"mindmap\"],\"description\":\"Type of diagram to generate\"},\"format\":{\"type\":\"string\",\"enum\":[\"svg\",\"mermaid\",\"png\"],\"description\":\"Output format for the diagram\"}},\"required\":[\"description\",\"diagramType\",\"format\"],\"additionalProperties\":false}</diagram_generator>"
  },
  "edit_file": {
    "description": "Do NOT make parallel edits to the same file.\nUse this tool to edit an existing file. Follow these rules:\n1. Specify ONLY the precise lines of code that you wish to edit.\n2. **NEVER specify or write out unchanged code**. Instead, represent all unchanged code using this special placeholder: {{ ... }}.\n3. To edit multiple, non-adjacent lines of code in the same file, make a single call to this tool. Specify each edit in sequence with the special placeholder {{ ... }} to represent unchanged code in between edited lines.\nHere's an example of how to edit three non-adjacent lines of code at once:\nCodeContent:\n{{ ... }}\nedited_line_1\n{{ ... }}\nedited_line_2\n{{ ... }}\nedited_line_3\n{{ ... }}\n\n5. You may not edit file extensions: [.ipynb]\nYou should specify the following arguments before the others: [TargetFile]",
    "schema": "<edit_file>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"CodeMarkdownLanguage\":{\"type\":\"string\",\"description\":\"Markdown language for the code block, e.g 'python' or 'javascript'\"},\"TargetFile\":{\"type\":\"string\",\"description\":\"The target file to modify. Always specify the target file as the very first argument.\"},\"Instruction\":{\"type\":\"string\",\"description\":\"A description of the changes that you are making to the file.\"},\"TargetLintErrorIds\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"If applicable, IDs of lint errors this edit aims to fix (they'll have been given in recent IDE feedback). If you believe the edit could fix lints, do specify lint IDs; if the edit is wholly unrelated, do not. A rule of thumb is, if your edit was influenced by lint feedback, include lint IDs. Exercise honest judgement here.\"},\"CodeEdit\":{\"type\":\"string\",\"description\":\"Specify ONLY the precise lines of code that you wish to edit. **NEVER specify or write out unchanged code**. Instead, represent all unchanged code using this special placeholder: {{ ... }}\"}},\"required\":[\"CodeMarkdownLanguage\",\"TargetFile\",\"Instruction\",\"TargetLintErrorIds\",\"CodeEdit\"],\"additionalProperties\":false}</edit_file>"
  },
  "fact_check": {
    "description": "Evaluates factual claims inside a selection; returns confidence score + supporting/refuting sources.",
    "schema": "<fact_check>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\",\"description\":\"The text containing claims to fact check\"},\"checkAgainstSources\":{\"type\":\"boolean\",\"description\":\"Whether to search for supporting/refuting sources online\"}},\"required\":[\"text\",\"checkAgainstSources\"],\"additionalProperties\":false}</fact_check>"
  },
  "find_by_name": {
    "description": "Search for files and subdirectories within a specified directory using fd.\nSearch uses smart case and will ignore gitignored files by default.\nPattern and Excludes both use the glob format. If you are searching for Extensions, there is no need to specify both Pattern AND Extensions.\nTo avoid overwhelming output, the results are capped at 50 matches. Use the various arguments to filter the search scope as needed.\nResults will include the type, size, modification time, and relative path.",
    "schema": "<find_by_name>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"SearchDirectory\":{\"type\":\"string\",\"description\":\"The directory to search within\"},\"Pattern\":{\"type\":\"string\",\"description\":\"Optional, Pattern to search for, supports glob format\"},\"Excludes\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Optional, exclude files/directories that match the given glob patterns\"},\"Type\":{\"type\":\"string\",\"enum\":[\"file\",\"directory\",\"any\"],\"description\":\"Optional, type filter\"},\"MaxDepth\":{\"type\":\"integer\",\"description\":\"Optional, maximum depth to search\"},\"Extensions\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Optional, file extensions to include (without leading .), matching paths must match at least one of the included extensions\"},\"FullPath\":{\"type\":\"boolean\",\"description\":\"Optional, whether the full absolute path must match the glob pattern, default: only filename needs to match. Take care when specifying glob patterns with this flag on, e.g when FullPath is on, pattern '*.py' will not match to the file '/foo/bar.py', but pattern '**/*.py' will match.\"}},\"required\":[\"SearchDirectory\",\"Pattern\",\"Excludes\",\"Type\",\"MaxDepth\",\"Extensions\",\"FullPath\"],\"additionalProperties\":false}</find_by_name>"
  },
  "grammar_style_check": {
    "description": "Runs grammar, clarity and reading-level analysis; returns list of issues w/ suggested fixes and style guide reference (APA, Chicago, etc.).",
    "schema": "<grammar_style_check>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{\"TargetFile\":{\"type\":\"string\",\"description\":\"The target file to analyze.\"},\"CodeContent\":{\"type\":\"string\",\"description\":\"The text content to analyze.\"}},\"required\":[\"CodeContent\"],\"type\":\"object\"}</grammar_style_check>"
  },
  "grep_search": {
    "description": "Use ripgrep to find exact pattern matches within files or directories.\nResults are returned in JSON format and for each match you will receive the:\n- Filename\n- LineNumber\n- LineContent: the content of the matching line\nTotal results are capped at 50 matches. Use the Includes option to filter by file type or specific paths to refine your search.",
    "schema": "<grep_search>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"SearchPath\":{\"type\":\"string\",\"description\":\"The path to search. This can be a directory or a file. This is a required parameter.\"},\"Query\":{\"type\":\"string\",\"description\":\"The search term or pattern to look for within files.\"},\"MatchPerLine\":{\"type\":\"boolean\",\"description\":\"If true, returns each line that matches the query, including line numbers and snippets of matching lines (equivalent to 'git grep -nI'). If false, only returns the names of files containing the query (equivalent to 'git grep -l').\"},\"Includes\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"The files or directories to search within. Supports file patterns (e.g., '*.txt' for all .txt files) or specific paths (e.g., 'path/to/file.txt' or 'path/to/dir'). Leave this empty if you're grepping within an individual file.\"},\"CaseInsensitive\":{\"type\":\"boolean\",\"description\":\"If true, performs a case-insensitive search.\"}},\"required\":[\"SearchPath\",\"Query\",\"MatchPerLine\",\"Includes\",\"CaseInsensitive\"],\"additionalProperties\":false}</grep_search>"
  },
  "list_dir": {
    "description": "List the contents of a directory. Directory path must be an absolute path to a directory that exists. For each child in the directory, output will have: relative path to the directory, whether it is a directory or file, size in bytes if file, and number of children (recursive) if directory.",
    "schema": "<list_dir>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"DirectoryPath\":{\"type\":\"string\",\"description\":\"Path to list contents of, should be absolute path to a directory\"}},\"required\":[\"DirectoryPath\"],\"additionalProperties\":false}</list_dir>"
  },
  "outline_generator": {
    "description": "Generates or updates a hierarchical outline from the current document, maintaining links to headings.",
    "schema": "<outline_generator>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"documentContent\":{\"type\":\"string\",\"description\":\"The content to generate an outline from\"},\"includeParagraphs\":{\"type\":\"boolean\",\"description\":\"Whether to include paragraph summaries in the outline\"},\"maxDepth\":{\"type\":\"integer\",\"minimum\":1,\"maximum\":6,\"description\":\"Maximum heading level to include in the outline\"}},\"required\":[\"documentContent\",\"includeParagraphs\",\"maxDepth\"],\"additionalProperties\":false}</outline_generator>"
  },
  "plagiarism_detector": {
    "description": "Checks selected text against public web and internal corpus; returns similarity score and matched snippets.",
    "schema": "<plagiarism_detector>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\",\"description\":\"The text to check for plagiarism\"},\"checkWeb\":{\"type\":\"boolean\",\"description\":\"Whether to check against web sources\"},\"checkInternal\":{\"type\":\"boolean\",\"description\":\"Whether to check against internal documents\"},\"minSimilarity\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Minimum similarity threshold (0-1) to report\"}},\"required\":[\"text\",\"checkWeb\",\"checkInternal\",\"minSimilarity\"],\"additionalProperties\":false}</plagiarism_detector>"
  },
  "read_url_content": {
    "description": "Read content from a URL. URL must be an HTTP or HTTPS URL that points to a valid internet resource accessible via web browser.",
    "schema": "<read_url_content>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"Url\":{\"type\":\"string\",\"description\":\"URL to read content from\"}},\"required\":[\"Url\"],\"additionalProperties\":false}</read_url_content>"
  },
  "reference_graph": {
    "description": "Builds and renders a graph of all citations and their cross-references inside a project, highlighting unused or orphaned entries.",
    "schema": "<reference_graph>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"projectPath\":{\"type\":\"string\",\"description\":\"Path to the project root directory\"},\"filePatterns\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"File patterns to include in the analysis (e.g., ['*.md', '*.tex'])\"},\"outputFormat\":{\"type\":\"string\",\"enum\":[\"svg\",\"png\",\"dot\",\"mermaid\"],\"description\":\"Output format for the reference graph\"},\"includeUnused\":{\"type\":\"boolean\",\"description\":\"Whether to include unused/uncited references in the graph\"}},\"required\":[\"projectPath\",\"filePatterns\",\"outputFormat\",\"includeUnused\"],\"additionalProperties\":false}</reference_graph>"
  },
  "search_web": {
    "description": "Performs a web search to get a list of relevant web documents for the given query and optional domain filter.",
    "schema": "<search_web>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\",\"description\":\"Optional domain to recommend the search prioritize\"}},\"required\":[\"query\",\"domain\"],\"additionalProperties\":false}</search_web>"
  },
  "suggested_responses": {
    "description": "If you are calling no other tools and are asking a question to the user, use this tool to supply a small number of possible suggested answers to your question. Examples can be Yes/No, or other simple multiple choice options. Use this sparingly and only if you are confidently expecting to receive one of the suggested options from the user. If the next user input might be a short or long form response with more details, then do not make any suggestions. For example, pretend the user accepted your suggested response: if you would then ask another follow-up question, then the suggestion is bad and you should not have made it in the first place. Try not to use this many times in a row.",
    "schema": "<suggested_responses>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"Suggestions\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of suggestions. Each should be at most a couple words, do not return more than 3 options.\"}},\"required\":[\"Suggestions\"],\"additionalProperties\":false}</suggested_responses>"
  },
  "template_applier": {
    "description": "Applies publication templates (journal article, grant proposal, lab report) with pre-filled sections and placeholder guidance.",
    "schema": "<template_applier>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"templateType\":{\"type\":\"string\",\"enum\":[\"journal_article\",\"conference_paper\",\"grant_proposal\",\"lab_report\",\"thesis\"],\"description\":\"Type of template to apply\"},\"styleGuide\":{\"type\":\"string\",\"enum\":[\"APA\",\"MLA\",\"Chicago\",\"IEEE\",\"Harvard\",\"Nature\",\"Science\"],\"description\":\"Citation and formatting style guide to follow\"},\"sections\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of sections to include in the template\"}},\"required\":[\"templateType\",\"styleGuide\",\"sections\"],\"additionalProperties\":false}</template_applier>"
  },
  "version_comparer": {
    "description": "Presents a side-by-side diff between two document revisions with accept/reject controls.",
    "schema": "<version_comparer>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"oldVersion\":{\"type\":\"string\",\"description\":\"The older version of the document\"},\"newVersion\":{\"type\":\"string\",\"description\":\"The newer version of the document\"},\"contextLines\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"Number of context lines to show around changes\"},\"ignoreWhitespace\":{\"type\":\"boolean\",\"description\":\"Whether to ignore whitespace changes\"}},\"required\":[\"oldVersion\",\"newVersion\",\"contextLines\",\"ignoreWhitespace\"],\"additionalProperties\":false}</version_comparer>"
  },
  "view_file": {
    "description": "View the contents of a file. The lines of the file are 0-indexed, and the output of this tool call will be the file contents from StartLine to EndLine (inclusive), together with a summary of the lines outside of StartLine and EndLine. Note that this call can view at most 200 lines at a time.\n\nWhen using this tool to gather information, it's your responsibility to ensure you have the COMPLETE context. Specifically, each time you call this command you should:\n1) Assess if the file contents you viewed are sufficient to proceed with your task.\n2) If the file contents you have viewed are insufficient, and you suspect they may be in lines not shown, proactively call the tool again to view those lines.\n3) When in doubt, call this tool again to gather more information. Remember that partial file views may miss critical dependencies, imports, or functionality.",
    "schema": "<view_file>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"AbsolutePath\":{\"type\":\"string\",\"description\":\"Path to file to view. Must be an absolute path.\"},\"StartLine\":{\"type\":\"integer\",\"description\":\"Startline to view\"},\"EndLine\":{\"type\":\"integer\",\"description\":\"Endline to view, inclusive. This cannot be more than 200 lines away from StartLine\"},\"IncludeSummaryOfOtherLines\":{\"type\":\"boolean\",\"description\":\"If true, you will also get a condensed summary of the full file contents in addition to the exact lines of code from StartLine to EndLine.\"}},\"required\":[\"AbsolutePath\",\"StartLine\",\"EndLine\",\"IncludeSummaryOfOtherLines\"],\"additionalProperties\":false}</view_file>"
  },
  "write_to_file": {
    "description": "Use this tool to create new files. The file and any parent directories will be created for you if they do not already exist. Follow these instructions: 1. NEVER use this tool to modify or overwrite existing files. Always first confirm that TargetFile does not exist before calling this tool. 2. You MUST specify TargetFile as the FIRST argument. Please specify the full TargetFile before any of the code contents.",
    "schema": "<write_to_file>{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"type\":\"object\",\"properties\":{\"TargetFile\":{\"type\":\"string\",\"description\":\"The target file to create and write code to. (Must be specified first).\"},\"CodeContent\":{\"type\":\"string\",\"description\":\"The code contents to write to the file.\"},\"EmptyFile\":{\"type\":\"boolean\",\"description\":\"Set this to true to create an empty file.\"}},\"required\":[\"TargetFile\",\"CodeContent\",\"EmptyFile\"],\"additionalProperties\":false}</write_to_file>"
  }
}